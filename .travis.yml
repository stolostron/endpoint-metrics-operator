os:
  - linux

language: go
go:
  - "1.13.x"

services:
  - docker

# need to onboard in sonarcloud later
addons:
  sonarcloud:
    organization: "open-cluster-management"
    token:
      secure: ”eYzTXlEeTLBKbMsl2Z81TjHKK6fEcOinMEXhdZg2MOeNQ+k+UekWxsEQZxQknIjIlaFVmuXLFEPmzsrYQW/gP/8mxNKEZaf6MkmO4093Yfh4TbkMfmYK3sU4guGVNsGkWf6jH/5h/1ZPgCMqM8/AVKe2xXNLeUuK87xtxli3V2dgatVUsj0ZYFkB7NJsXN1pXyK16V8lNSNb9meHG89QNS7E66zzHiN5VtqOj+x3p2DNIEGy5KKoSN0f5Lc4TWrGxvfJJ8+z4VPeFvif7e0aQcT5d1FYmhxVdSs6zdKmjmEItz9jhcheU+91MUc2g073XHWP5mMgkVxFabRULoEGGiXXP1WupEkSUGVuM/kjvTR4DeIAOtycQQktAKMVrvtjfhufNzhiYnJfI7+SzbDruvrrdN7h1VdTYDyGNyk8Gl6l1J3kU05Bhy4IwFl1FZvpYTw1BCQyUrQQPRMexkKOGNGHNOIZq+iwE1jlHKrPaQAYjTljudF3X/QGF9tNcIdjTtnUy5vGwCzXG9DZsaerRdjZ3CCXWYPN91eCkE5rs21MPVHhxDw+gIYpfoDzHIqizPKNpRDZS/QC2nCQErkmFKkRxqUp1LkKHbCTnXoKCH1Fnqs3Fxv3QrAOEcMzVfxcdAG4f8KRolfbuZQeBl75H4NT/+DFWrMXVgMBVO7nbSk=“

#branches:
#  only:
#    - master
#    - /^release-[0-9]+\..*$/

env:
  global:
    # Required
    - OS=linux
    - COMPONENT_TAG_EXTENSION="-${TRAVIS_COMMIT}"

    # Component Specific
    - COMPONENT_INIT_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/install-dependencies.sh
    - COMPONENT_BUILD_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/build.sh
    - COMPONENT_UNIT_TEST_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/run-unit-tests.sh
    - COMPONENT_DEPLOY_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/deploy-to-cluster.sh
    - COMPONENT_E2E_TEST_COMMAND=${TRAVIS_BUILD_DIR}/cicd-scripts/run-e2e-tests.sh

stages:
  - build
  - unit-test
  - test-e2e
  - release-ff
  - publish

before_script:
  - make init
  
jobs:
  include:
    - stage: build
      name: "Build the test image and push it"
      script:
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - |
          make && make component/build && make component/push && make imagescan/status && make security/scans
    - stage: unit-test
      name: "Run unit tests"
      script:
        # Set the image tag differently for PRs
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        # Bootstrap the build harness, pull test image, and run unit tests.  
        - |
          make && make component/test/unit && make sonar/go && make copyright-check TRAVIS_BRANCH=${TRAVIS_BRANCH}
    - stage: test-e2e
      name: "Deploy the image to a cluster and run e2e tests"
      script:
        #Check out a clusterpool, set up oc, deploy, run e2e tests, and return clusterpool cluster
        - if [ "$TRAVIS_PULL_REQUEST" != "false" ]; then export COMPONENT_TAG_EXTENSION="-PR${TRAVIS_PULL_REQUEST}-${TRAVIS_COMMIT}"; fi;
        - |
          make 
          make component/pull 
          make component/test/e2e
    - stage: release-ff
      name: "Push commits to current release branch"
      if: type = push AND branch =~ /^master$/
      script:
        - make
        - make release-ff
    - stage: publish
      name: "Publish the image to quay with an official version/sha tag and publish entry to integration pipeline stage"
      if: type = push AND branch =~ /^release-[0-9]+\..*$/
      script:
        - |
          make 
          make pipeline-manifest/update PIPELINE_MANIFEST_COMPONENT_SHA256=${TRAVIS_COMMIT} PIPELINE_MANIFEST_COMPONENT_REPO=${TRAVIS_REPO_SLUG} PIPELINE_MANIFEST_BRANCH=${TRAVIS_BRANCH}